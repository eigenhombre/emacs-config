(define-derived-mode l1-mode
  lisp-mode "L1 Mode"
  "Major mode for L1 Lisp code"
  (setq inferior-lisp-program (executable-find "l1"))
  ;; (put 'test 'common-lisp-indent-function 1)
  ;; (put 'testing 'common-lisp-indent-function 1)
  (put 'test 'lisp-indent-function 1)
  (put 'testing 'lisp-indent-function 1)
  (put 'errors 'lisp-indent-function 1)
  (put 'if 'lisp-indent-function 1)
  (put 'if-not 'lisp-indent-function 1)
  (put 'try 'lisp-indent-function 0)
  (put 'foreach 'lisp-indent-function 2)
  (put 'when-not 'lisp-indent-function 1)
  (paredit-mode 1)
  (aggressive-indent-mode 1)
  (define-key l1-mode-map (kbd "s-i") 'lisp-eval-last-sexp)
  (define-key l1-mode-map (kbd "C-x C-e") 'lisp-eval-last-sexp)
  (define-key l1-mode-map (kbd "s-1")
    (lambda ()
      (interactive)
      (insert "()")
      (backward-char)))
  (define-key l1-mode-map (kbd "s-I")
    (lambda ()
      (interactive)
      (forward-sexp)
      (lisp-eval-last-sexp)))
  (define-key l1-mode-map (kbd "C-o j")
    (lambda ()
      (interactive)
      (split-window-horizontally)
      (let ((b (current-buffer)))
        (run-lisp inferior-lisp-program)
        (set-buffer b))))
  (define-key l1-mode-map (kbd "C-c C-k")
    (lambda ()
      (interactive)
      (lisp-eval-region (point-min)
                        (point-max)))))

(add-to-list 'auto-mode-alist '("\\.l1" . l1-mode))
